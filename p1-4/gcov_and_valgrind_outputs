./mainRandom -v 3 -e 6 -s 42


matankl@matankl-VMware-Virtual-Platform:~/code/OSEx4/p3$ make all
g++ -std=c++17 -Wall -pg -g -fprofile-arcs -ftest-coverage -c mainRandom.cpp graph_and_Euler.cpp
g++ -std=c++17 -Wall -pg -g -fprofile-arcs -ftest-coverage -o mainRandom mainRandom.o graph_and_Euler.o
matankl@matankl-VMware-Virtual-Platform:~/code/OSEx4/p3$ ./mainRandom -v 3 -e 6 -s 5413
Generated Graph:
1: 0 2 0 2 
0: 2 1 1 2 
2: 0 1 0 1 
The graph has an Eulerian circuit.
matankl@matankl-VMware-Virtual-Platform:~/code/OSEx4/p3$ gcov mainRandom.cpp
File 'mainRandom.cpp'
Lines executed:66.67% of 39
Creating 'mainRandom.cpp.gcov'

File 'Graph.hpp'
No executable lines
Removing 'Graph.hpp.gcov'

Lines executed:91.10% of 146


matankl@matankl-VMware-Virtual-Platform:~/code/OSEx4/p3$ gcov graph_and_Euler.cpp
File '/u
File 'graph_and_Euler.cpp'
Lines executed:95.00% of 40
Creating 'graph_and_Euler.cpp.gcov'

as we can see the coverage is not 100% in both files but its ok because
the parts that are not covered are error handling.



valgrind:
matankl@matankl-VMware-Virtual-Platform:~/code/OSEx4/p3$ valgrind --leak-check=full ./mainRandom -v 3 -e 6 -s 42
==13750== Memcheck, a memory error detector
==13750== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==13750== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==13750== Command: ./mainRandom -v 3 -e 6 -s 42
==13750== 
Generated Graph:
1: 0 0 
2: 0 0 0 0 
0: 2 1 1 2 2 2 
The graph has an Eulerian circuit.
==13750== 
==13750== Process terminating with default action of signal 27 (SIGPROF)
==13750==    at 0x4C328B2: __open_nocancel (open64_nocancel.c:39)
==13750==    by 0x4C4285F: write_gmon (gmon.c:393)
==13750==    by 0x4C4320A: _mcleanup (gmon.c:467)
==13750==    by 0x4B5D371: __cxa_finalize (cxa_finalize.c:82)
==13750==    by 0x10B7A6: ??? (in /home/matankl/code/OSEx4/p1-4/mainRandom)
==13750==    by 0x40010F1: _dl_call_fini (dl-call_fini.c:43)
==13750==    by 0x4005577: _dl_fini (dl-fini.c:114)
==13750==    by 0x4B5DA65: __run_exit_handlers (exit.c:108)
==13750==    by 0x4B5DBAD: exit (exit.c:138)
==13750==    by 0x4B401D0: (below main) (libc_start_call_main.h:74)
==13750== 
==13750== HEAP SUMMARY:
==13750==     in use at exit: 134,440 bytes in 3 blocks
==13750==   total heap usage: 23 allocs, 20 frees, 135,104 bytes allocated
==13750== 
==13750== LEAK SUMMARY:
==13750==    definitely lost: 0 bytes in 0 blocks
==13750==    indirectly lost: 0 bytes in 0 blocks
==13750==      possibly lost: 0 bytes in 0 blocks
==13750==    still reachable: 134,440 bytes in 3 blocks
==13750==         suppressed: 0 bytes in 0 blocks
==13750== Reachable blocks (those to which a pointer was found) are not shown.
==13750== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13750== 
==13750== For lists of detected and suppressed errors, rerun with: -s
==13750== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Profiling timer expired