        -:    0:Source:Graph.hpp
        -:    0:Graph:mainRandom.gcno
        -:    0:Data:mainRandom.gcda
        -:    0:Runs:1
        -:    1:#ifndef GRAPH_HPP
        -:    2:#define GRAPH_HPP
        -:    3:
        -:    4:#include <unordered_map>
        -:    5:#include <list>
        -:    6:#include <iostream>
        -:    7:
        1:    8:class Graph {
        -:    9:private:
        -:   10:    std::unordered_map<int, std::list<int>> adjList; // Adjacency list for storing edges
        -:   11:    int vertices;                                   // Number of vertices in the graph
        -:   12:
        -:   13:public:
        -:   14:    // Constructor to initialize the graph with a given number of vertices
        -:   15:    Graph(int v);
        -:   16:
        -:   17:    // Function to add an edge between two vertices (undirected graph)
        -:   18:    void addEdge(int u, int v);
        -:   19:
        -:   20:    // Function to display the graph
        -:   21:    void displayGraph() const;
        -:   22:
        -:   23:    // Getter for the adjacency list
        -:   24:    const std::unordered_map<int, std::list<int>> &getAdjList() const;
        -:   25:
        -:   26:    // Function to determine if the graph has an Eulerian circuit
        -:   27:    bool isEulerian() const;
        -:   28:};
        -:   29:
        -:   30:#endif // GRAPH_HPP
